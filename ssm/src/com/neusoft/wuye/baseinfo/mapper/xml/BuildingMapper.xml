<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.wuye.baseinfo.mapper.IBuildingMapper">
	<!-- 楼宇基本信息映射 -->
	<resultMap id="BuildingResultMap" type="Building" >
		<id property="no" column="BuildingNo" />
		<result property="code" column="BCODE"/>
		<result property="address" column="BAddress"/>
		<result property="direction" column="Direction"/>
		<result property="totalHomes" column="TotalHome"/>
		<result property="totoalHouses" column="TotalHouse"/>
		
	</resultMap>
	<!-- 楼宇关联信息映射 -->
	<resultMap id="BuildingAssociationResultMap" type="Building" extends="BuildingResultMap" >
		<!-- 内嵌式Select方式 -->
		<association property="area" column="AreaNo"  select="com.neusoft.wuye.baseinfo.mapper.IAreaMapper.select" ></association>
		<association property="buildingType" column="BuildingTypeNo" select="com.neusoft.wuye.baseinfo.mapper.IBuildingTypeMapper.select"></association>
		
		<!-- 内嵌式ResultMap 
		<association property="area" javaType="Area" resultMap="com.neusoft.wuye.baseinfo.mapper.IAreaMapper.AreaResultMap" />
		<association property="buildingType" resultMap="com.neusoft.wuye.baseinfo.mapper.IBuildingTypeMapper.BuildingTypeResultMap"></association>
		-->
	</resultMap>
	
	<insert id="insert" parameterType="Building">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select SQ_Building.nextval from dual
		</selectKey>
		INSERT INTO Building(BuildingNo,AreaNo,BCODE,BAddress,BuildingTypeNo,Direction) 
		VALUES(#{no},#{area.no},#{code},#{address},#{buildingType.no},#{direction})
	</insert>
	
	<update id="update" parameterType="Building">
		update Building set AreaNo=#{area.no},BCODE=#{code},BAddress=#{address},
		BuildingTypeNo=#{buildingType.no},Direction=#{direction}
		where BuildingNo=#{no}
	</update>
	
	<delete id="delete" parameterType="Building">
		delete from Building where BuildingNo=#{no}
	</delete>
	
	<select id="select" parameterType="int" resultMap="BuildingAssociationResultMap">
		select * from Building where BuildingNo=#{buildingNo}
	</select>
	
	
	<select id="selectListByAll" resultMap="BuildingResultMap">
		select * from Building
	</select>
	
	<select id="selectListByCondition"  resultMap="BuildingResultMap">
		select * from Building 
		<where>
		<if test="areaNo!=0">
		   and AreaNo=#{areaNo}
		</if>
		<if test="buildingTypeNo!=0">
		   and BuildingTypeNo=#{buildingTypeNo}
		</if>
		<if test="code!=null and code!=''">
		   and BCODE like #{code}
		</if>
		</where>
		
	</select>
	
	
	<select id="selectListByAllWithPage" resultMap="BuildingAssociationResultMap">
		select a.*,b.*,c.* from Building a inner join Area b on a.areaNo=b.areano
		inner join BuildingType c on a.BuildingTypeNo=c.TYPENO
		
	</select>
	
	
	
	<select id="selectListByConditionWithPage" resultMap="BuildingAssociationResultMap">
		select * from Building
		<where>
		<if test="areaNo!=0">
		   and AreaNo=#{areaNo}
		</if>
		<if test="buildingTypeNo!=0">
		   and BuildingTypeNo=#{buildingTypeNo}
		</if>
		<if test="code!=null and code!=''">
		   and BCODE like #{code}
		</if>
		</where>
		
	</select>
	
	
	<select id="selectCountByAll" resultType="int">
		select count(Building) from Building
	</select>
	
	<select id="selectListByArea" parameterType="_int" resultMap="BuildingResultMap" >
	  select * from Building where AREANO=#{areaNo}
	</select>
	
	<select id="selectListByBuildingType" parameterType="_int" resultMap="BuildingResultMap">
	 select * from Building where BuildingTypeNo=#{typeNo}
	</select>
	<!-- 按检索条件取得楼宇个数 -->
	<select id="selectCountByCondition" resultType="_int">
	    select count(*) from Building
		<where>
		<if test="areaNo!=0">
		   and AreaNo=#{areaNo}
		</if>
		<if test="buildingTypeNo!=0">
		   and BuildingTypeNo=#{buildingTypeNo}
		</if>
		<if test="code!=null and code!=''">
		   and BCODE like #{code}
		</if>
		</where>
		
	</select>
	
	
	


</mapper>

