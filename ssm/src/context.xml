<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
	http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd
	http://mybatis.org/schema/mybatis-spring
	http://mybatis.org/schema/mybatis-spring.xsd">

	<!-- 配置Spring IoC容器扫描Bean的基础路径 -->
	<context:component-scan base-package="com.neusoft.wuye"/>
	<!-- 启用AspectJ 注释机制 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 配置数据源  传统的JDBC DriverManager管理方式
	<bean id="dataSource01" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"  value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/cityoa"/>
		<property name="username" value="root"/>
		<property name="password" value="city62782116"/>
	</bean>
	-->
	<!-- 配置数据源, 使用Tomcat配置的连接池
	<bean id="dataSource02" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName" value="java:comp/env/wuye"/>
	</bean>
	-->
	<!-- 使用C3P0连接池框架 配置数据源  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:oracl"/>
		<property name="user" value="SCOTT"/>
		<property name="password" value="oracl"/>
	</bean>
	<!-- 配置Spring管理SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.neusoft.wuye.baseinfo.model,com.neusoft.wuye.admin.model"></property>
		<property name="mapperLocations" value="classpath:com/neusoft/wuye/*/mapper/xml/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
				
	</bean>
	<!-- 获取SqlSession对象 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 获得Mapper接口对象  配置单个Mapper接口模式, 已经淘汰
	<bean id="livingTypeMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
  	 <property name="mapperInterface" value="com.neusoft.wuye.baseinfo.mapper.LivingTypeMapper" />
   	 <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	-->
	<!-- 获得Mapper接口对象, 配置扫描Mapper接口父包的方式  ,旧版Spring-MyBatis模式
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.neusoft.wuye.baseinfo.mapper" />
	</bean>
	-->
	<!-- 获得Mapper接口对象, 配置扫描Mapper接口父包的方式  ,新版Spring-MyBatis模式-->
	<mybatis:scan base-package="com.neusoft.wuye.baseinfo.mapper,com.neusoft.wuye.admin.mapper" />
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 启动事务切面 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	
</beans>
